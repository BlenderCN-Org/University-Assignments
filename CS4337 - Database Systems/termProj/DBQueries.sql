--<Query 1>
SELECT X.InterviewerId, P.Name
  FROM (SELECT DISTINCT I.InterviewerId
          FROM EMPLOYEE E, Person P, INTERVIEW I
         WHERE (I.ApplicantId = P.PersonId AND P.Name = 'Hellen Cole' AND I.JobId = '11111')) X, Person P
 WHERE X.InterviewerId = P.PersonId;

--<Query 2>
SELECT J.JobId
  FROM Department D, Job J
 WHERE (J.DepartmentId = D.DepartmentId AND J.POSTEDDATE BETWEEN TO_DATE('2011/03/01','yyyy/mm/dd') and TO_DATE('2011/03/31','yyyy/mm/dd'));

--<Query 3>
SELECT E.EmployeeId, P.Name FROM EMPLOYEE E, Person P WHERE (E.EmployeeId = P.PersonId AND E.SupervisorId IS NULL);

--<Query 4>
SELECT M.SiteId, M.SiteLocation
  FROM SALE S, EMPLOYEE E, MARKETINGSITE M
 WHERE (S.SALETIME NOT BETWEEN TO_DATE('2011/03/01','yyyy/mm/dd') AND TO_DATE('2011/03/31','yyyy/mm/dd') AND S.SALESMANID = E.EmployeeId AND E.SITEID = M.SITEID)

  MINUS

SELECT M.SiteId, M.SiteLocation
  FROM SALE S, EMPLOYEE E, MARKETINGSITE M
 WHERE (S.SALETIME BETWEEN TO_DATE('2011/03/01','yyyy/mm/dd') AND TO_DATE('2011/03/31','yyyy/mm/dd') AND S.SALESMANID = E.EmployeeId AND E.SITEID = M.SITEID);

--<Query 5 Is this what he wants?>
SELECT X.JOBID, X.JOBDESCRIPTION
  FROM (SELECT J.JOBID, J.JOBDESCRIPTION, J.POSTEDDATE, SYSDATE - J.POSTEDDATE AS DURATION
          FROM JOB J) X
 WHERE X.DURATION > 30;

--<Query 6>
SELECT P.Name, P.PERSONID
  FROM Person P, Product Pr, Sale S
 WHERE (Pr.LISTPRICE > 200 AND S.SALESMANID = P.PERSONID AND S.PRODUCTID = Pr.PRODUCTID);

--<Query 7>
SELECT DISTINCT D.DEPARTMENTID, D.DEPARTMENTNAME
  FROM Department D, Job J
 WHERE (J.DepartmentId = D.DepartmentId AND J.POSTEDDATE NOT BETWEEN TO_DATE('2011/01/01','yyyy/mm/dd') and TO_DATE('2011/02/01','yyyy/mm/dd'))

 MINUS

SELECT DISTINCT D.DEPARTMENTID, D.DEPARTMENTNAME
  FROM Department D, Job J
 WHERE (J.DepartmentId = D.DepartmentId AND J.POSTEDDATE BETWEEN TO_DATE('2011/01/01','yyyy/mm/dd') and TO_DATE('2011/02/01','yyyy/mm/dd'));

--<Query 8>
SELECT DISTINCT P.PersonId, P.Name, D.DEPARTMENTNAME
  FROM Department D, Employee E, Interview I, Job J, Person P
 WHERE (I.APPLICANTID = E.EmployeeId AND E.EmployeeId = P.PersonId AND I.JobId = '12345' AND I.JobId = J.JobId AND J.DepartmentId = D.DepartmentId);

--<Query 9>
SELECT MAX(COUNT(P.ProductType)) FROM SALE S, PRODUCT P WHERE S.PRODUCTID = P.PRODUCTID GROUP BY P.PRODUCTTYPE;

--<Query 10>
SELECT X.PRODUCTTYPE
  FROM (SELECT X.PRODUCTTYPE, AVG(X.LISTPRICE - X.PTOT) AS PTOT
          FROM (SELECT DISTINCT P.PRODUCTID, PRODUCT.PRODUCTTYPE, PRODUCT.LISTPRICE, SUM(PART.PRICE * P.QUANTITY) AS PTOT
                  FROM PART PART, PRODUCT PRODUCT, PRODUCT_PARTS P
        WHERE (P.PARTID = PART.PARTID AND P.PRODUCTID = PRODUCT.PRODUCTID) group by P.PRODUCTID, PRODUCT.PRODUCTTYPE, PRODUCT.LISTPRICE) X GROUP BY X.PRODUCTTYPE) X
 WHERE X.PTOT = (SELECT MAX(AVG(X.LISTPRICE - X.PTOT))
                   FROM (SELECT DISTINCT P.PRODUCTID, PRODUCT.PRODUCTTYPE, PRODUCT.LISTPRICE, SUM(PART.PRICE * P.QUANTITY) AS PTOT
                           FROM PART PART, PRODUCT PRODUCT, PRODUCT_PARTS P
                          WHERE (P.PARTID = PART.PARTID AND P.PRODUCTID = PRODUCT.PRODUCTID) group by P.PRODUCTID, PRODUCT.PRODUCTTYPE, PRODUCT.LISTPRICE) X GROUP BY X.PRODUCTTYPE);

SELECT MAX(AVG(X.LISTPRICE - X.PTOT)) FROM
(SELECT DISTINCT P.PRODUCTID, PRODUCT.PRODUCTTYPE, PRODUCT.LISTPRICE, SUM(PART.PRICE * P.QUANTITY) AS PTOT
  FROM PART PART, PRODUCT PRODUCT, PRODUCT_PARTS P
 WHERE (P.PARTID = PART.PARTID AND P.PRODUCTID = PRODUCT.PRODUCTID) group by P.PRODUCTID, PRODUCT.PRODUCTTYPE, PRODUCT.LISTPRICE) X GROUP BY X.PRODUCTTYPE;

SELECT X.PRODUCTTYPE, AVG(X.LISTPRICE - X.PTOT) AS PTOT
  FROM (SELECT DISTINCT P.PRODUCTID, PRODUCT.PRODUCTTYPE, PRODUCT.LISTPRICE, SUM(PART.PRICE * P.QUANTITY) AS PTOT
          FROM PART PART, PRODUCT PRODUCT, PRODUCT_PARTS P
         WHERE (P.PARTID = PART.PARTID AND P.PRODUCTID = PRODUCT.PRODUCTID) group by P.PRODUCTID, PRODUCT.PRODUCTTYPE, PRODUCT.LISTPRICE) X
 GROUP BY X.PRODUCTTYPE;

--<Query 11 *Dis requires some more info, :thinking:>

--<Query 12>
SELECT P.Name, P.Email FROM PERSON P,
(SELECT PERSONID, JOBID, SUM(GRADE) / COUNT(ROUNDNUMBER) AS AVERAGE_SCORE, COUNT(ROUNDNUMBER) AS ROUNDCOUNT FROM
 (SELECT DISTINCT P.PERSONID, IG.ROUNDNUMBER, IG.GRADE, I.JobId
  FROM JOB J, PERSON P, POTENTIALEMPLOYEE PE, INTERVIEW_GRADE IG, INTERVIEW I
 WHERE (IG.INTERVIEWID = I.INTERVIEWID AND I.APPLICANTID = PE.POTENTIALEMPLOYEEID AND I.APPLICANTID = P.PERSONID)) group by JOBID, PERSONID)  X
 WHERE X.ROUNDCOUNT >=5 AND X.AVERAGE_SCORE >= 70 AND X.PERSONID = P.PERSONID;

--<Query 13, Whats the difference between this one and 12?>
-- Select people who got every job they applied for...

--<Query 14>
SELECT X.PERSONID, X.NAME
  FROM (SELECT P.PERSONID, P.NAME, AVG(S.AMOUNT) AS AVERAGE FROM PERSON P, EMPLOYEE E, SALARY S WHERE (P.PERSONID = E.EMPLOYEEID AND S.EMPLOYEEID = E.EMPLOYEEID) GROUP BY P.PERSONID, P.NAME) X
 WHERE (X.AVERAGE = (SELECT MAX(AVG(S.AMOUNT)) FROM SALARY S GROUP BY S.EMPLOYEEID));
--SELECT P.PERSONID, P.NAME, AVG(S.AMOUNT) AS AVERAGE FROM PERSON P, EMPLOYEE E, SALARY S WHERE (P.PERSONID = E.EMPLOYEEID AND S.EMPLOYEEID = E.EMPLOYEEID) GROUP BY P.PERSONID, P.NAME;

--<Query 15>
SELECT V.VENDORID, V.NAME
  FROM PART P, VENDOR V
 WHERE P.PARTNAME = 'Cup' AND V.VENDORID = P.VENDORID AND P.PRICE = (SELECT MIN(P.PRICE) FROM PART P WHERE P.PARTNAME = 'Cup');
